{"version":3,"sources":["Components/Card.js","Components/Cards.js","Components/SearchBar.js","Components/Scroll.js","Components/ErrorBoundry.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","Cards","robots","map","user","i","SearchBar","props","type","placeholder","onChange","Scroll","style","overflow","overflowX","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","e","searchfield","target","value","fetch","then","response","json","users","robotsfiltred","filter","robot","toLocaleLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAiBeA,EAdF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,GAAGC,EAAgB,EAAhBA,KAAKC,EAAW,EAAXA,MAEf,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,YAAYC,IAAG,+BAA0BL,EAA1B,cACxB,gCACI,6BAAKC,IACL,4BAAIC,WCaTI,EAnBD,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEZ,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAKC,GACb,OACI,cAAC,EAAD,CACIV,GAAMO,EAAOG,GAAGV,GAChBC,KAAMM,EAAOG,GAAGT,KAChBC,MAASK,EAAOG,GAAGR,OAHVK,EAAOG,GAAGV,UCChCW,EATG,SAACC,GACf,OACI,8BACI,uBAAOC,KAAK,SAASC,YAAY,gBAAgBX,UAAU,6BAA6BY,SAAUH,EAAMG,cCKrGC,EATA,SAACJ,GACZ,OACI,qBAAKK,MAAO,CAACC,SAAS,SAASC,UAAU,SAASC,OAAO,kBAAkBC,OAAO,SAAlF,SACKT,EAAMU,YCgBJC,E,kDAhBP,WAAYX,GAAO,IAAD,8BACd,cAAMA,IACDY,MAAQ,CAACC,UAAS,GAFT,E,qDAKlB,SAAkBC,EAAMC,GAEpBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAG5B,WACI,OAAOG,KAAKJ,MAAMC,SAAW,0DAAoCG,KAAKhB,MAAMU,a,GAb7DQ,aCmDZC,G,wDA3CX,aACC,IAAD,8BACI,gBAYJC,eAAiB,SAACC,GACV,EAAKJ,SAAS,CAACK,YAAcD,EAAEE,OAAOC,SAZ1C,EAAKZ,MAAM,CACPjB,OAAO,GACP2B,YAAc,IAJtB,E,qDAOA,WACC,IAAD,OACIG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAACtB,OAASkC,S,oBAM3C,WAEI,MAA6Bb,KAAKJ,MAA3BjB,EAAP,EAAOA,OAAO2B,EAAd,EAAcA,YACRQ,EAAgBnC,EAAOoC,QAAO,SAAAC,GAChC,OAAOA,EAAM3C,KAAK4C,oBAAoBC,SAASZ,MAEnD,OAAQ3B,EAAOwC,OAGX,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,sBACA,cAAC,EAAD,CAAWY,SAAYa,KAAKI,iBAC5B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAQzB,OAAUmC,WAPjC,oBAAIvC,UAAU,KAAd,6B,GA3BS2B,cCGHkB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,eAAC,IAAMC,WAAP,eAAmB,cAAC,EAAD,IAAnB,OACAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4f7be9c7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Card = ({id,name,email}) => {\r\n  \r\n        return (\r\n            <div className=\"tc bg-light-green ma2 pa3 br3 grow dib bw2 shadow-5\">\r\n                <img alt='robot{id}' src={`https://robohash.org/${id}?200x200`}/>\r\n                <div>\r\n                    <h2>{name}</h2>\r\n                    <p>{email}</p>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n}\r\n\r\nexport default Card;\r\n\r\n\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst Cards = ({robots}) => {\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user,i) => {\r\n                    return (\r\n                        <Card key = {robots[i].id} \r\n                            id = {robots[i].id} \r\n                            name={robots[i].name} \r\n                            email = {robots[i].email} />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Cards;\r\n","import React from 'react';\r\n\r\n\r\nconst SearchBar = (props) => {\r\n    return (\r\n        <div>\r\n            <input type='search' placeholder=\"search robots\" className=\"pa3 b--green bg-light-blue\" onChange={props.onChange}/>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n    return (\r\n        <div style={{overflow:'scroll',overflowX:'hidden',border:'1px solid white',height:'648px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Scroll;\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass ErrorBoundry extends Component{\r\n\r\n        constructor(props){\r\n            super(props);\r\n            this.state = {hasError:false};            \r\n        }\r\n\r\n        componentDidCatch(error,info)\r\n        {\r\n            this.setState({hasError:true});\r\n        }\r\n\r\n        render(){\r\n            return this.state.hasError ? <h1>Oooooops, there is Error</h1> : this.props.children ;\r\n        }\r\n\r\n}\r\n\r\nexport default ErrorBoundry;","import React,{Component} from \"react\";\r\n\r\nimport Cards from '../Components/Cards';\r\nimport SearchBar from '../Components/SearchBar';\r\nimport Scroll from '../Components/Scroll';\r\nimport ErrorBoundry from '../Components/ErrorBoundry';\r\n\r\nimport './app.css';\r\n\r\nclass App extends Component{\r\n\r\n    constructor()\r\n    {\r\n        super()\r\n        this.state={\r\n            robots:[],\r\n            searchfield : ''\r\n        }\r\n    }\r\n    componentDidMount()\r\n    {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({robots : users}));\r\n    }\r\n    onSearchChange = (e) => {\r\n            this.setState({searchfield : e.target.value});\r\n    }\r\n\r\n    render()\r\n    {\r\n        const {robots,searchfield} = this.state;\r\n        const robotsfiltred = robots.filter(robot => {\r\n            return robot.name.toLocaleLowerCase().includes(searchfield);\r\n        });\r\n        return !robots.length ?\r\n         <h1 className=\"tc\">Laoding ...</h1> :              \r\n        (\r\n            <div className=\"tc\">\r\n                <h1 className=\"f1\">mr robot</h1>\r\n                <SearchBar onChange = {this.onSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundry>\r\n                        <Cards  robots = {robotsfiltred}/>\r\n                    </ErrorBoundry>                        \r\n                </Scroll>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode> <App /> </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}